# Default values for valkyrie.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.io/valkyriefnd
  image: valkyrie
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  # tag: latest

# valkyrie application config goes here (contents of valkyrie_config.yml)
config:
  logging:
    level: info
  providers:
#    - name: Evolution
#      auth:
#        casino_key: ${EVO_CASINO_KEY}
#        api_key: ${EVO_API_KEY}
#      url: 'https://some.env.evolution.com'
#    - name: Caleta
#      auth:
#        signing_key: ${CALETA_SIGNING_KEY}
#        verification_key: ${CALETA_VERIFICATION_KEY}
#        operator_id: ${CALETA_OPERATOR_ID}
#      url: 'https://ask.caletagaming.com'

# environment variables injected for valkyrie (secrets such as EVO_CASINO_KEY goes here)
env:
#  - name: EVO_CASINO_KEY
#    valueFrom:
#      secretKeyRef:
#        name: my-secret-resource
#        key: casinoKey

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# service exposing operator API endpoints
operatorService:
  type: ClusterIP
  port: 8084
  annotations:

# service exposing provider API endpoints
providerService:
  type: ClusterIP
  port: 8083
  annotations:

ingress:
  enabled: false
  #className: nginx
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # certificateName: cert-name
  # hosts:
    # - host: my.api.io
      # paths:
        #- path: /path
        #  pathType: ImplementationSpecific
        # serviceName: service-name
        # servicePort: port

resources:
  requests:
    cpu: 100m
    memory: 48Mi
# limits:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# configuration for OpenTelemetry Collector sidecar
# https://opentelemetry.io/docs/collector/
otel:
  enabled: false
  # https://opentelemetry.io/docs/collector/configuration/
  config:
  # default otel-collector-sidecar will listen to otlp over http
  containers:
    - name: otel-collector-sidecar
      image: otel/opentelemetry-collector-contrib:0.71.0
      ports:
        - containerPort: 4318
          name: otlp-http
          protocol: TCP
      args:
        - --config=/etc/otel/collector.yaml
      volumeMounts:
        - mountPath: /etc/otel
          name: otel-config-map
          readOnly: true
